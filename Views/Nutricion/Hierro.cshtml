@{
    // Since Address isn't a string, it requires a cast.
    var listarProductos = ViewData["listarProductos"];

}

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.8">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
    @*Font Awesome*@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"
          rel="stylesheet" />
    @*Google Fonts*@
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
          rel="stylesheet" />
    @*MDB*@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.3.0/mdb.min.css"
          rel="stylesheet" />
</head>
<div class="p-5 text-center">
    <h3 class="align-content-center">

        <img src="~/img/vitaminass.jpg" width="50" height="50" />
        Nutrición>Minerales> <b>Hierro</b>
        <img src="~/img/vitaminass.jpg" width="50" height="50" />

    </h3>

    @foreach (var item in ViewData["listaTipo"] as List<Producto>)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Precio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.idpt }) |
                @Html.ActionLink("Details", "Details", new { id = item.idpt }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.idpt })
            </td>
        </tr>
    }
</div>
